<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.chris.mybatis.mapper.UserMapper">

    <resultMap type="user" id="userMap">
        <id column="id" property="id"/>
        <result property="userName" column="user_name"  typeHandler="org.chris.mybatis.config.MyTypeHandler"/>
        <result property="password" column="password" />
        <result property="email"  column="email" />
        <result property="sex"  column="sex"  typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
        <result property="cnName"  column="cnname" />
        <result property="mobile"  column="mobile" />
        <result property="note"  column="note" />

        <!--association元素处理表与表之间一对一的关系-->
        <!--association中property为当前类的属性  -->
        <!--column用来传给另一个表的值所在列，一般为两个表关联的主键。对于复合主键可以指定多个列名，通过column="{prop1=col1,prop2=col2}"-->
        <!--select另外一个查询语句的id，可以加载这个属性映射需要的复杂类型。获取的 在column属性中指定的列的值将被传递给目标select语句作为参数。-->

        <!--<association property="role" column="role_id" select="RoleMapper.getRoleById"/>-->
        <!-- 写法二
         <association property="role" javaType="Role">
            <id column="id" property="tid"></id>
            <result column="roleName" property="roleName"/>
        </association>
        -->
    </resultMap>

    <!--collection元素的作用几乎和association是相同的,collection中多了ofType属性，这个属性用来区分与类的属性property，它代表的是集合属性中包含的类型-->

    
    <insert id="insertUUID" parameterType="org.chris.mybatis.entity.User"  >
        <selectKey keyProperty="id" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '') as id from dual
        </selectKey>
        INSERT INTO `t_user`(`id`,`user_name`,`password`,`sex`,`cnname`,`mobile`) VALUES (#{id},#{userName},#{password},#{sex,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler },#{cnname},#{mobile})
    </insert>
    
    <select id="getByNameLike" parameterType="string" resultMap="userMap">
        select id , user_name ,password, sex,email,cnname,note,mobile from  t_user
        where name like concat('%',#{userName,typeHandler=org.chris.mybatissqlsessionfactory.config.MyTypeHandler },'%');
    </select>

    <select id="findUserBySex" resultType="org.chris.mybatis.entity.User">
        select id,user_name as userName,cnname as cnName,sex,mobile,email,note from t_user where sex in
        <foreach collection="sexList" item="sex" index="index" open="(" separator="," close=")">
            #{sex}
        </foreach>
    </select>


</mapper>


